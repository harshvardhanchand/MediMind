"""add_metadata_overrides_to_document

Revision ID: a978a8428f3d
Revises: f654ca7ad3e2
Create Date: 2025-05-08 23:36:44.993201

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a978a8428f3d'
down_revision = 'f654ca7ad3e2'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('supabase_id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('user_metadata', sa.JSON(), nullable=True),
    sa.Column('app_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_supabase_id'), 'users', ['supabase_id'], unique=True)
    op.create_table('documents',
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('storage_path', sa.String(), nullable=False),
    sa.Column('document_type', sa.Enum('PRESCRIPTION', 'LAB_RESULT', 'OTHER', name='documenttype'), nullable=False),
    sa.Column('upload_timestamp', sa.DateTime(), nullable=False),
    sa.Column('processing_status', sa.Enum('PENDING', 'PROCESSING', 'REVIEW_REQUIRED', 'COMPLETED', 'FAILED', name='processingstatus'), nullable=False),
    sa.Column('file_hash', sa.String(), nullable=True),
    sa.Column('file_metadata', sa.JSON(), nullable=True),
    sa.Column('document_date', sa.Date(), nullable=True),
    sa.Column('source_name', sa.String(), nullable=True),
    sa.Column('source_location_city', sa.String(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('user_added_tags', sa.JSON(), nullable=True),
    sa.Column('related_to_health_goal_or_episode', sa.String(), nullable=True),
    sa.Column('metadata_overrides', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('document_id'),
    sa.UniqueConstraint('storage_path')
    )
    op.create_index(op.f('ix_documents_file_hash'), 'documents', ['file_hash'], unique=False)
    op.create_index(op.f('ix_documents_user_id'), 'documents', ['user_id'], unique=False)
    op.create_table('extracted_data',
    sa.Column('extracted_data_id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('raw_text', sa.Text(), nullable=True),
    sa.Column('extraction_timestamp', sa.DateTime(), nullable=False),
    sa.Column('review_status', sa.Enum('PENDING_REVIEW', 'REVIEWED_CORRECTED', 'REVIEWED_APPROVED', name='reviewstatus'), nullable=False),
    sa.Column('reviewed_by_user_id', sa.UUID(), nullable=True),
    sa.Column('review_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.document_id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('extracted_data_id')
    )
    op.create_index(op.f('ix_extracted_data_document_id'), 'extracted_data', ['document_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_extracted_data_document_id'), table_name='extracted_data')
    op.drop_table('extracted_data')
    op.drop_index(op.f('ix_documents_user_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_file_hash'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_users_supabase_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ### 